version: '3.7'

services:
  database:
    image: postgres:11.5-alpine
    container_name: ${DB_CONTAINER_NAME}
    volumes:
      - postgres_data:/var/lib/potgresql/data/
    ports:
      #      Local development only
      - ${DATABASE_EXPOSE_PORT}:5432

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: ${PROJECT_CONTAINER_NAME}
    command: sh /scripts/start-backend.sh
    volumes:
      - ./backend/project_backend/:/${PROJECT_WORK_DIR}
      - .env:/${PROJECT_WORK_DIR}/.env
    ports:
      - ${WSGI_PORT}:${WSGI_PORT}
    environment:
      - PYTHONDONTWRITEBYTECODE:1
    depends_on:
      - database
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`fancybear.localhost:8000`)"

  traefik:
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8089:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  postgres_data:
